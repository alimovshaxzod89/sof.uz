<?php

namespace common\models;

use yii\data\ActiveDataProvider;

/**
 * Class Error
 * @package common\models
 * @property mixed  message
 * @property mixed  url
 * @property mixed  status
 * @property  mixed text
 */
class Error extends MongoModel
{
    protected $_searchableAttributes = ['text', 'message'];
    const STATUS_NEW = 'new';
    const STATUS_PROCESSING = 'processing';
    const STATUS_FIXED = 'fixed';

    public function attributes()
    {
        return [
            '_id',
            'text',
            'url',
            'message',
            'status',
            'created_at',
            'updated_at',
        ];
    }

    public function rules()
    {
        return [
            ['status', 'safe', 'on' => 'update'],
            [['status', 'search'], 'safe', 'on' => 'search'],
        ];
    }

    public static function collectionName()
    {
        return 'error';
    }

    public static function getStatusOptions($empty = false)
    {
        $data = [
            self::STATUS_NEW   => __('New'),
            self::STATUS_FIXED => __('Fixed'),
        ];

        return $empty ? array_merge(['' => ''], $data) : $data;
    }

    public function beforeSave($insert)
    {
        foreach (['url', 'text', 'message'] as $att) {
            $this->$att = strip_tags($this->$att);
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function search($params)
    {
        $this->load($params);
        $query = self::find();

        $dataProvider = new ActiveDataProvider([
                                                   'query'      => $query,
                                                   'sort'       => [
                                                       'defaultOrder' => ['created_at' => 'DESC'],
                                                   ],
                                                   'pagination' => [
                                                       'pageSize' => 20,
                                                   ],
                                               ]);


        if ($this->search) {
            foreach ($this->_searchableAttributes as $attribute) {
                $query->orFilterWhere([$attribute => ['$regex' => $this->search, '$options' => 'si']]);

            }
        }

        if ($this->status) {
            $query->andFilterWhere(['status' => $this->status]);
        }
        return $dataProvider;

    }

}