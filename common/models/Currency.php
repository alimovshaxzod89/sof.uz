<?php
/**
 * @link      http://www.activemedia.uz/
 * @copyright Copyright (c) 2017. ActiveMedia Solutions LLC
 * @author    Rustam Mamadaminov <rmamdaminov@gmail.com>
 */

/**
 * Created by PhpStorm.
 * User: lisa
 * Date: 12/12/17
 * Time: 9:17 PM
 */

namespace common\models;

use Yii;

/**
 * Class Currency
 * @package common\models
 * @property string          id
 * @property ObjectId        _id
 * @property string          cityId
 * @property string          cityName
 * @property string          status
 * @property array           temperature
 * @property string          position
 * @property string          info
 * @property string          date
 * @property Timestamp lastUpdate
 * @property Timestamp $created_at
 * @property Timestamp $updated_at
 */
class Currency extends MongoModel
{
    public static $rates = ['USD', 'EUR', 'RUB', 'GBP'];

    public static function collectionName()
    {
        return 'currency';
    }

    public static function getCurrencies()
    {
        return [
            'USD',
            'EUR',
            'RUB',
            'GBP',
            'CNY',
            'JPY',
            'KRW',
            'CHF',
            'KZT',
        ];
    }

    public function attributes()
    {
        return [
            '_id',
            'date',
            'USD',
            'USD_ch',
            'RUB',
            'RUB_ch',
            'EUR',
            'EUR_ch',
            'GBP',
            'GBP_ch',
            'CNY',
            'CNY_ch',
            'CHF',
            'CHF_ch',
            'KZT',
            'KZT_ch',
            'KRW',
            'KRW_ch',
            'JPY',
            'JPY_ch',
            'lastUpdate',
            'created_at',
            'updated_at',
        ];
    }

    public function beforeSave($insert)
    {

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function getUpdatedAtFormatted()
    {
        return Yii::$app->formatter->asDatetime($this->updated_at->getTimestamp(), 'php:d/M, H:i');
    }

    public function getRateDateFormatted()
    {
        if ($date = date_create_from_format('d.m.Y', $this->date)) {
            return mb_convert_case(Yii::$app->formatter->asDatetime($date->getTimestamp(), 'php:l, d/m/Y'), MB_CASE_TITLE, 'UTF-8');
        }
    }
}